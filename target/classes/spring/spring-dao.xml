<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配制整合mybatis过程 -->
	<!-- 1:配制数据库相关参数 -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />
	<!-- 2:数据库连接池 -->
	<!-- 好像终于解决了！！！！加了个destroy-method="close" -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  destroy-method="close">
		<!-- 配制连接池属性 -->
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />

		<!-- c3p0连接池私有属性 -->
		<!-- c3p0连接池最大连接数，默认是15，改成30。最小默认3，改成10 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="3" />
		<!-- 线程结束将线程放回连接池中,关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 当连接池线程占满后，等待空余线程的时间，默认是0，就是无限等待，这样会让线程卡死，所以设置为1000，及时的释放线程 -->
		<property name="checkoutTimeout" value="5000" />
		<!-- 设置重试获取链接的次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 3:配制sqlSessionFactory对象 ，大概是池子里的链接属性 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配制mybatis全局配制文件：mybatis-config.xml -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage"
			value="com.obd.entity" />
		<!-- 扫描sql配制文件：mapper需要的xml文件 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml" />
	</bean>
	<!-- 4:配制扫描DAO接口包，动态实现dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
		<!-- 给出需要扫描的dao接口包 -->
		<property name="basePackage" value="com.obd.dao" />
	</bean>

</beans>